{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/contacts.js","components/App.js","index.js"],"names":["Filter","handleInputFilter","type","onChange","PersonForm","addPerson","handleInputText","newName","newPhone","onSubmit","e","value","Person","handleDelete","person","name","phone","onClick","id","Persons","persons","filterText","filtered","filter","toLowerCase","includes","map","key","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setFilterText","setNewName","setNewPhone","errorMessage","setErrorMessage","useEffect","contacts","handleAfterCreate","handleAfterUpdate","changedPerson","target","preventDefault","duplicate","find","index","duplicatePerson","window","confirm","updatedContact","catch","error","console","log","newPersons","ReactDOM","render","notes","content","date","important","document","getElementById"],"mappings":"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","file":"static/js/main.5fa07b74.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({handleInputFilter}) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input type=\"text\" onChange={handleInputFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ( { addPerson, handleInputText, newName, newPhone }) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name:{\" \"}\r\n        <input onChange={e => handleInputText(e, \"name\")} value={newName} />\r\n      </div>\r\n      <div>\r\n        number:{\" \"}\r\n        <input onChange={e => handleInputText(e, \"phone\")} value={newPhone} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Person = ({ handleDelete, person }) => {\r\n  return (\r\n    <li>\r\n      {person.name} - {person.phone}\r\n      <button onClick={() => handleDelete(person.id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = ({ handleDelete, persons, filterText }) => {\r\n  const filtered = persons.filter(person => {\r\n    const name = person.name.toLowerCase();\r\n    return name.includes(filterText.toLowerCase());\r\n  });\r\n  return (\r\n    <ul>\r\n      {filtered.map(person => (\r\n        <Person handleDelete={handleDelete} key={person.name} person={person} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\"; // Khi copy từ frontend sang backend thì bỏ đoạn localhost:3000 đi vì frontend và backend nằm cùng thư mục\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data); // trả về 1 promises. Nếu promise này dùng then thì response.data sẽ là tham số truyền vào\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst del = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  del\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./Filter\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport Notification from \"./Notification\";\r\nimport contacts from \"../services/contacts\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newPhone, setNewPhone] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    contacts.getAll().then(persons => {\r\n      setPersons(persons);\r\n    });\r\n  }, []);\r\n\r\n  const duplicatePerson = () => {\r\n    const duplicate = persons.find((person, index) => {\r\n      return person.name === newName; // không dùng indexof vì có name A có thể nằm trong name B\r\n    });\r\n    if (duplicate) {\r\n      return duplicate;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const addPerson = e => {\r\n    e.preventDefault();\r\n    const duplicate = duplicatePerson();\r\n    if (duplicate) {\r\n      const isUpdate = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with the new one`\r\n      );\r\n      if (isUpdate) {\r\n        const updatedContact = {\r\n          id: duplicate.id,\r\n          name: duplicate.name,\r\n          phone: newPhone\r\n        };\r\n        contacts\r\n          .update(duplicate.id, updatedContact)\r\n          .then(person => handleAfterUpdate(person));\r\n        return;\r\n      }\r\n      return;\r\n    }\r\n    const newPerson = {\r\n      name: newName,\r\n      phone: newPhone\r\n    };\r\n    contacts\r\n      .create(newPerson)\r\n      .then(person => {\r\n        handleAfterCreate(person);\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(error.response.data.error);\r\n        console.log(error.response.data);\r\n      });\r\n  };\r\n\r\n  const handleAfterCreate = person => {\r\n    setPersons([...persons, person]);\r\n    setNewName(\"\");\r\n    setNewPhone(\"\");\r\n  };\r\n\r\n  const handleAfterUpdate = changedPerson => {\r\n    setPersons(\r\n      persons.map(person =>\r\n        person.id !== changedPerson.id ? person : changedPerson\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleInputText = (e, type) => {\r\n    const value = e.target.value;\r\n    if (\"name\" === type) {\r\n      setNewName(value);\r\n    } else {\r\n      setNewPhone(value);\r\n    }\r\n  };\r\n\r\n  const handleInputFilter = e => {\r\n    const value = e.target.value;\r\n    setFilterText(value);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    contacts.del(id).then(() => {\r\n      const newPersons = persons.filter(person => person.id !== id);\r\n      setPersons(newPersons);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={errorMessage} />\r\n      <Filter handleInputFilter={handleInputFilter} />\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        handleInputText={handleInputText}\r\n        newName={newName}\r\n        newPhone={newPhone}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        filterText={filterText}\r\n        handleDelete={handleDelete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst notes = [\r\n  {\r\n    id: 1,\r\n    content: \"HTML is easy\",\r\n    date: \"2019-05-30T17:30:31.098Z\",\r\n    important: true\r\n  },\r\n  {\r\n    id: 2,\r\n    content: \"Browser can execute only Javascript\",\r\n    date: \"2019-05-30T18:39:34.091Z\",\r\n    important: false\r\n  },\r\n  {\r\n    id: 3,\r\n    content: \"GET and POST are the most important methods of HTTP protocol\",\r\n    date: \"2019-05-30T19:20:14.298Z\",\r\n    important: true\r\n  }\r\n];\r\n\r\nReactDOM.render(<App notes={notes} />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}